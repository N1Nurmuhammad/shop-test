version: "3"

services:
  testredis:
    container_name: testredis
    image: redis
    volumes:
      - redis_data:/data
  testdb:
    container_name: testdb
    restart: unless-stopped
    image: postgres:14.0
    volumes:
      - postgre:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - 5432:5432
  testapp:
    container_name: testapp
    restart: unless-stopped
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - ./static:/app/static
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - testdb
  testworker:
    container_name: testworker
    build: .
    command: 'celery -A core.celery.app worker -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler --pool=solo'
    volumes:
      - .:/app
    depends_on:
      - testredis
      - testapp
  testbeat:
    container_name: testbeat
    build: .
    command: "celery -A core.celery.app beat  -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - testapp
      - testredis
volumes:
  postgre:
  static:
  redis_data:
#networks:
