from django.core.validators import MinValueValidator, MaxValueValidatorfrom drf_yasg import openapifrom rest_framework import serializersclass FilterDateSerializer(serializers.Serializer):    start_month = serializers.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(12)])    start_year = serializers.IntegerField()    end_month = serializers.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(12)], required=False)    end_year = serializers.IntegerField(required=False)    start_day = serializers.IntegerField(required=False)    end_day = serializers.IntegerField(required=False)    start_hour = serializers.IntegerField(required=False, validators=[MinValueValidator(0), MaxValueValidator(23)])    end_hour = serializers.IntegerField(required=False, validators=[MinValueValidator(0), MaxValueValidator(23)])class ResponseEmployeesStatisticsSerializer(serializers.Serializer):    id = serializers.IntegerField()    fullname = serializers.CharField()    unique_clients = serializers.IntegerField()    clients = serializers.IntegerField()    products_count = serializers.IntegerField()    prices_sum = serializers.IntegerField()class ResponseEmployeeStatisticsWithPk(serializers.Serializer):    employee_name = serializers.CharField()    clients_count = serializers.IntegerField()    unique_client = serializers.IntegerField()    prices_sum = serializers.IntegerField()    products_count = serializers.IntegerField()class ResponseClientStatisticsSerializer(serializers.Serializer):    id = serializers.IntegerField()    fullname = serializers.CharField()    products_count = serializers.IntegerField()    prices_sum = serializers.IntegerField()date_params = [    openapi.Parameter(        name='start_month',        in_=openapi.IN_QUERY,        type=openapi.TYPE_INTEGER,        description='start month',        required=True    ),    openapi.Parameter(        name='start_year',        in_=openapi.IN_QUERY,        type=openapi.TYPE_INTEGER,        description='start year',        required=True    ),    openapi.Parameter(        name='end_month',        in_=openapi.IN_QUERY,        type=openapi.TYPE_INTEGER,        description='end month',        required=False    ),    openapi.Parameter(        name='end_year',        in_=openapi.IN_QUERY,        type=openapi.TYPE_INTEGER,        description='end year',        required=False    ),    openapi.Parameter(        name='start_day',        in_=openapi.IN_QUERY,        type=openapi.TYPE_INTEGER,        description='start day',        required=False    ),    openapi.Parameter(        name='end_day',        in_=openapi.IN_QUERY,        type=openapi.TYPE_INTEGER,        description='end day',        required=False    ),    openapi.Parameter(        name='start_hour',        in_=openapi.IN_QUERY,        type=openapi.TYPE_INTEGER,        description='start hour',        required=False    ),    openapi.Parameter(        name='end_hour',        in_=openapi.IN_QUERY,        type=openapi.TYPE_INTEGER,        description='end hour',        required=False    )]